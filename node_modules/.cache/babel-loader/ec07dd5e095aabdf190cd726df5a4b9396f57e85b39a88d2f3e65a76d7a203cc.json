{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esooe\\\\Downloads\\\\myreadingBook-master\\\\myreadingBook-master\\\\src\\\\components\\\\bookCardItem\\\\BookCardItem.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Card, Image, Button, Dropdown } from \"semantic-ui-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeCategory, editShelf } from \"../../store/booksSlice\";\nimport \"./BookCardItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadingOptions = [{\n  key: \" current reading\",\n  text: \" current reading\",\n  value: \"currentlyReading\"\n}, {\n  key: \"read\",\n  text: \"read\",\n  value: \"read\"\n}, {\n  key: \"Want to Read\",\n  text: \"Want to Read\",\n  value: \"wantToRead\"\n}, {\n  key: \"None\",\n  text: \"None\",\n  value: \"none\"\n}];\nfunction BookCard(_ref) {\n  _s();\n  var _book$imageLinks;\n  let {\n    book\n  } = _ref;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const books = useSelector(state => state.books.books);\n  const handleChangeCategory = (id, data) => {\n    let newBooks = [];\n    books.map(book => {\n      if (book.id === id) {\n        newBooks = [...newBooks, {\n          ...book,\n          shelf: data.value\n        }];\n      } else {\n        newBooks = [...newBooks, book];\n      }\n    });\n    dispatch(editShelf({\n      bookId: id,\n      category: data.value\n    }));\n    dispatch(changeCategory(newBooks));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mr-b\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [book.imageLinks && /*#__PURE__*/_jsxDEV(Image, {\n        className: \"imagestyle\",\n        src: book === null || book === void 0 ? void 0 : (_book$imageLinks = book.imageLinks) === null || _book$imageLinks === void 0 ? void 0 : _book$imageLinks.thumbnail,\n        wrapped: true,\n        ui: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [book.authors && /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: book === null || book === void 0 ? void 0 : book.authors.map(auther => auther)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), book.publishedDate && /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: book.publishedDate.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), book.title && /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: [book.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: () => navigate(`/${book.id}`),\n          children: \"Show Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Dropdown, {\n            inline: true,\n            options: ReadingOptions,\n            defaultValue: book.shelf,\n            onChange: (e, data) => handleChangeCategory(book.id, data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(BookCard, \"4a1mfzbBFXhopFd3ZQ3MvEkE/X0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = BookCard;\nexport default BookCard;\nvar _c;\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"names":["React","Card","Image","Button","Dropdown","useNavigate","useDispatch","useSelector","changeCategory","editShelf","ReadingOptions","key","text","value","BookCard","book","navigate","dispatch","books","state","handleChangeCategory","id","data","newBooks","map","shelf","bookId","category","imageLinks","thumbnail","authors","auther","publishedDate","toString","title","e"],"sources":["C:/Users/esooe/Downloads/myreadingBook-master/myreadingBook-master/src/components/bookCardItem/BookCardItem.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  Image,\n  Button,\n  Dropdown,\n  DropdownProps,\n} from \"semantic-ui-react\";\nimport { BookData } from \"../../models/BookModel\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeCategory, editShelf } from \"../../store/booksSlice\";\nimport { AppDispatch, RootState } from \"../../store/store\";\nimport \"./BookCardItem.css\";\n\nconst ReadingOptions = [\n  {\n    key: \" current reading\",\n    text: \" current reading\",\n    value: \"currentlyReading\",\n  },\n  {\n    key: \"read\",\n    text: \"read\",\n    value: \"read\",\n  },\n  {\n    key: \"Want to Read\",\n    text: \"Want to Read\",\n    value: \"wantToRead\",\n  },\n  {\n    key: \"None\",\n    text: \"None\",\n    value: \"none\",\n  },\n];\n\nfunction BookCard({ book }: { book: BookData }): JSX.Element {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const books = useSelector((state: RootState) => state.books.books);\n\n  const handleChangeCategory = (id: string, data: DropdownProps) => {\n    let newBooks = [] as BookData[];\n    books.map((book) => {\n      if (book.id === id) {\n        newBooks = [...newBooks, { ...book, shelf: data.value as string }];\n      } else {\n        newBooks = [...newBooks, book];\n      }\n    });\n\n    dispatch(editShelf({ bookId: id, category: data.value }));\n    dispatch(changeCategory(newBooks));\n  };\n  return (\n    <div className=\"mr-b\">\n      <Card>\n        {book.imageLinks && (\n          <Image\n            className=\"imagestyle\"\n            src={book?.imageLinks?.thumbnail}\n            wrapped\n            ui={false}\n          />\n        )}\n        <Card.Content>\n          {book.authors && (\n            <Card.Header>{book?.authors.map((auther) => auther)}</Card.Header>\n          )}\n          {book.publishedDate && (\n            <Card.Meta>{book.publishedDate.toString()}</Card.Meta>\n          )}\n          {book.title && <Card.Description>{book.title} </Card.Description>}\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic color=\"green\" onClick={() => navigate(`/${book.id}`)}>\n            Show Details\n          </Button>\n          <span>\n            {\" \"}\n            <Dropdown\n              inline\n              options={ReadingOptions}\n              defaultValue={book.shelf}\n              onChange={(e, data) => handleChangeCategory(book.id, data)}\n            />\n          </span>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\nexport default BookCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
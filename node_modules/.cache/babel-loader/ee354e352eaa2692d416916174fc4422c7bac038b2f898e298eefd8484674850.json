{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esooe\\\\Downloads\\\\myreadingBook-master\\\\myreadingBook-master\\\\src\\\\components\\\\bookCardItem\\\\BookCardItem.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Card, Image, Button, Dropdown } from 'semantic-ui-react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCategory, editShelf } from '../../store/booksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadingOptions = [{\n  key: ' current reading',\n  text: ' current reading',\n  value: 'currentlyReading'\n}, {\n  key: 'read',\n  text: 'read',\n  value: 'read'\n}, {\n  key: 'Want to Read',\n  text: 'Want to Read',\n  value: 'wantToRead'\n}, {\n  key: 'None',\n  text: 'None',\n  value: 'none'\n}];\nfunction BookCard(_ref) {\n  _s();\n  var _book$imageLinks;\n  let {\n    book\n  } = _ref;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const books = useSelector(state => state.books.books);\n  const handleChangeCategory = (id, data) => {\n    let newBooks = [];\n    books.map(book => {\n      if (book.id === id) {\n        newBooks = [...newBooks, {\n          ...book,\n          shelf: data.value\n        }];\n      } else {\n        newBooks = [...newBooks, book];\n      }\n    });\n    dispatch(editShelf({\n      bookId: id,\n      category: data.value\n    }));\n    dispatch(changeCategory(newBooks));\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [book.imageLinks && /*#__PURE__*/_jsxDEV(Image, {\n      c: true,\n      src: book === null || book === void 0 ? void 0 : (_book$imageLinks = book.imageLinks) === null || _book$imageLinks === void 0 ? void 0 : _book$imageLinks.thumbnail,\n      wrapped: true,\n      ui: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      children: [book.authors && /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: book === null || book === void 0 ? void 0 : book.authors.map(auther => auther)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), book.publishedDate && /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: book.publishedDate.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this), book.title && /*#__PURE__*/_jsxDEV(Card.Description, {\n        children: [book.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      extra: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        basic: true,\n        color: \"green\",\n        onClick: () => navigate(`/${book.id}`),\n        children: \"Show Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [' ', /*#__PURE__*/_jsxDEV(Dropdown, {\n          inline: true,\n          options: ReadingOptions,\n          defaultValue: book.shelf,\n          onChange: (e, data) => handleChangeCategory(book.id, data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(BookCard, \"4a1mfzbBFXhopFd3ZQ3MvEkE/X0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = BookCard;\nexport default BookCard;\nvar _c;\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"names":["React","Card","Image","Button","Dropdown","useNavigate","useDispatch","useSelector","changeCategory","editShelf","ReadingOptions","key","text","value","BookCard","book","navigate","dispatch","books","state","handleChangeCategory","id","data","newBooks","map","shelf","bookId","category","imageLinks","thumbnail","authors","auther","publishedDate","toString","title","e"],"sources":["C:/Users/esooe/Downloads/myreadingBook-master/myreadingBook-master/src/components/bookCardItem/BookCardItem.tsx"],"sourcesContent":["import React from 'react'\nimport { Card, Image, Button, Dropdown, DropdownProps } from 'semantic-ui-react'\nimport { BookData } from '../../models/BookModel';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCategory, editShelf } from '../../store/booksSlice';\nimport { AppDispatch, RootState } from '../../store/store';\n\nconst ReadingOptions = [\n  {\n    key: ' current reading',\n    text: ' current reading',\n    value: 'currentlyReading',\n  },\n  {\n    key: 'read',\n    text: 'read',\n    value: 'read',\n  },\n  {\n    key: 'Want to Read',\n    text: 'Want to Read',\n    value: 'wantToRead',\n  },\n  {\n    key: 'None',\n    text: 'None',\n    value: 'none',\n  },\n\n]\n\nfunction BookCard({ book }: { book: BookData }): JSX.Element {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const books = useSelector((state: RootState) => state.books.books);\n\n  const handleChangeCategory = (id: string, data: DropdownProps) => {\n    let newBooks = [] as BookData[];\n    books.map((book) => {\n      if (book.id === id){\n        newBooks = [...newBooks, { ...book, shelf: data.value as string }];\n      }\n      else {\n        newBooks = [...newBooks, book]\n      }\n      \n    })\n\n    dispatch(editShelf({ bookId: id, category: data.value }))\n    dispatch((changeCategory(newBooks)))\n  }\n  return (\n    <Card>\n    {book.imageLinks &&  <Image c src={book?.imageLinks?.thumbnail} wrapped ui={false} />}\n      <Card.Content>\n       {book.authors && <Card.Header>{book?.authors.map(auther => auther)}</Card.Header>}\n      {book.publishedDate &&  <Card.Meta>{book.publishedDate.toString()}</Card.Meta>}\n       {book.title && <Card.Description>\n          {book.title} </Card.Description>}\n      </Card.Content>\n      <Card.Content extra>\n        <Button basic color='green' onClick={\n          () => navigate(`/${book.id}`)}\n        >\n          Show Details\n        </Button>\n        <span>\n          {' '}\n          <Dropdown\n            inline\n            options={ReadingOptions}\n            defaultValue={book.shelf}\n            onChange={(e, data) => handleChangeCategory(book.id, data)}\n          />\n        </span>\n\n      </Card.Content>\n    </Card>\n  )\n}\nexport default BookCard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}